name: JAVA CI

on:
  push:
    branches:
    - 'master'

jobs:

  test:
    name: Test - Units & Integrations
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.4
    - name: Maven Package
      run: mvn -B clean package -DskipTests
    - name: Maven Verify
      run: mvn -B clean verify -Pintegration-test
    - name: Archive jar
      uses: actions/upload-artifact@v2
      with:
        name: webapp-jar
        path: target/*.jar

  sonar:
    name: Test - SonarCloud Scan
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11.0.4
    - name: SonarCloud Scan
      run: mvn -B clean verify -Psonar -Dsonar.login=${{ secrets.SONAR_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


  artifact:
    name:  Publish - Image
    runs-on: ubuntu-18.04
    needs: [test, sonar]

    steps:
    - uses: actions/checkout@v1

    - name: Download jar
      uses: actions/download-artifact@v2
      with:
        name: webapp-jar

    - name: 'Build and push image'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - run: |
        pwd
        ls
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/webapp:${{ github.sha }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/webapp:${{ github.sha }}

    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Deploy to Azure Container Instances'
      uses:  azure/aci-deploy@v1
      with:
         resource-group: ezlink-test_group
         dns-name-label: webapp${{ github.run_number }}
         image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/webapp:${{ github.sha }}
         registry-username: ${{ secrets.REGISTRY_USERNAME }}
         registry-password: ${{ secrets.REGISTRY_PASSWORD }}
         name:  springboot-webapp
         location: East US